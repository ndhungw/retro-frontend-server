{"version":3,"sources":["components/boards/BoardItem.js","utils/store.js","components/boards/BoardsList.js","components/SimpleTabs.js","components/columns/Title.js","components/Input/InputCard.js","components/Input/InputContainer.js","components/columns/Card.js","components/columns/Column.js","components/boards/BoardDetails.js","App.js","reportWebVitals.js","index.js"],"names":["BoardItem","board","classes","Grid","item","xs","sm","md","Card","className","card","CardActionArea","component","Link","to","pathname","_id","CardMedia","cardMedia","image","title","CardContent","cardContent","Typography","gutterBottom","variant","name","align","color","style","fontSize","Date","createdAt","toLocaleString","CardActions","Button","size","IconButton","aria-label","StoreContext","React","createContext","StoreContextProvider","children","useState","contextBoards","setContextBoards","contextColumns","setContextColumns","store","contextCards","setContextCards","Provider","value","Copyright","href","getFullYear","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","height","display","flexDirection","flexGrow","footer","BoardsList","user","openAddBoarDialog","setOpenAddBoarDialog","newBoardName","setNewBoardName","useContext","useEffect","a","axios","get","response","boards","data","getAllBoards","handleClose","handleCreate","userId","post","newBoard","console","log","Fragment","Container","maxWidth","container","justify","startIcon","onClick","Dialog","open","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","defaultValue","helperText","onChange","e","target","handleChangeTextField","required","fullWidth","on","DialogActions","direction","alignItems","filter","map","TabPanel","props","index","other","role","hidden","Box","p","a11yProps","root","SimpleTabs","setValue","CssBaseline","AppBar","position","Tabs","event","newValue","Tab","useStyle","width","justifyContent","editableContainer","editableTitle","fontWeight","input","btnDeleteColumn","Title","columnName","columnId","isEditing","setIsEditing","newColName","setNewColName","openDeleteColumnDialog","setOpenDeleteColumnDialog","handleBlur","column","handleCloseDeleteColumnDialog","handleAcceptDeleteColumnDialog","delete","InputBase","handleChange","inputProps","onBlur","aria-describedby","btnConfirm","fade","confirm","InputCard","type","boardId","cardId","authorId","oldContent","setIsOpen","content","setContent","addCard","newCard","deleteCard","updateCard","updatedContextCards","cardFound","updateResponse","addColumn","newColumn","handleBtnConfirm","Paper","multiline","placeholder","minWidth","addANewCardOrColumn","InputContainer","isOpen","Collapse","in","elevation","minHeight","Column","getAllCardsFromColumn","boardTitle","columnsContainer","flexWrap","columnNameInput","BoardDetails","useParams","setBoard","history","useHistory","openDeleteDialog","setOpenDeleteDialog","columns","getBoard","getAllColumnsFromBoard","handleDeleteBoard","goBack","handleCloseDeleteDialog","handleBoardNameChange","button","navLinkHome","textDecoration","App","Toolbar","noWrap","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f36ee2bb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardActionArea } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nexport default function BoardItem({ board, classes }) {\r\n  return (\r\n    <Grid item key={board._id} xs={12} sm={6} md={4}>\r\n      <Card className={classes.card}>\r\n        <CardActionArea\r\n          component={Link}\r\n          to={{\r\n            pathname: `/boards/${board._id}`,\r\n            // pathname: `/boards?id=${board._id}`,\r\n            // board: board,\r\n          }}\r\n        >\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image=\"https://source.unsplash.com/random\"\r\n            title=\"Image title\"\r\n          />\r\n          <CardContent className={classes.cardContent}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {board.name}\r\n            </Typography>\r\n            <Typography align=\"right\" color=\"textSecondary\">\r\n              <ScheduleIcon style={{ fontSize: 14 }} />\r\n              {new Date(board.createdAt).toLocaleString()}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\">\r\n            URL\r\n          </Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            CLONE\r\n          </Button>\r\n          <IconButton aria-label=\"more\" size=\"small\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport const StoreContext = React.createContext(null);\r\n\r\nexport default function StoreContextProvider({ children }) {\r\n  const [contextBoards, setContextBoards] = useState([]);\r\n  const [contextColumns, setContextColumns] = useState([]);\r\n  const [contextCards, setContextCards] = useState([]);\r\n\r\n  // const addANewCard = (card) => {\r\n  //   console.log(\"card.name = \" + card.content);\r\n  //   setContextCards([...contextCards, card]);\r\n  // };\r\n\r\n  const store = {\r\n    // cards: [cards, setCards],\r\n    // columns: [columns, setColumns],\r\n    // boards: [boards, setBoards],\r\n    contextBoards,\r\n    setContextBoards,\r\n    contextColumns,\r\n    setContextColumns,\r\n    contextCards,\r\n    setContextCards,\r\n    // addANewCard,\r\n  };\r\n\r\n  return (\r\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\r\n\r\n// Dialog\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport BoardItem from \"./BoardItem\";\r\nimport axios from \"axios\";\r\nimport { StoreContext } from \"../../utils/store\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        1712481@fit\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport default function BoardsList({ user }) {\r\n  const classes = useStyles();\r\n  const [openAddBoarDialog, setOpenAddBoarDialog] = useState(false);\r\n  const [newBoardName, setNewBoardName] = useState(\"New board\");\r\n  const { contextBoards, setContextBoards } = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    async function getAllBoards() {\r\n      const response = await axios.get(\r\n        \"https://retro-clone-api.herokuapp.com/boards\"\r\n      );\r\n      const boards = response.data;\r\n      setContextBoards(boards);\r\n    }\r\n    getAllBoards();\r\n  }, [user, setContextBoards]);\r\n\r\n  const handleClose = () => {\r\n    setOpenAddBoarDialog(false);\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    const board = {\r\n      name: newBoardName,\r\n      userId: user._id,\r\n    };\r\n\r\n    // update DB\r\n    const response = await axios.post(\r\n      // `http://localhost:4000/boards/add`,\r\n      `https://retro-clone-api.herokuapp.com/boards/add`,\r\n      board\r\n    );\r\n    const newBoard = response.data;\r\n    console.log(newBoard);\r\n\r\n    // update frontend\r\n    setContextBoards([...contextBoards, newBoard]);\r\n\r\n    setOpenAddBoarDialog(false);\r\n  };\r\n\r\n  const handleChangeTextField = (e) => {\r\n    setNewBoardName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <CssBaseline /> */}\r\n      {/* <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <GradientIcon className={classes.icon} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            FunRetroClone\r\n          </Typography>\r\n        </Toolbar>\r\n        <LabTabs />\r\n      </AppBar> */}\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              My Boards\r\n            </Typography>\r\n            {/* <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              Something short and leading about the collection below—its\r\n              contents, the creator, etc. Make it short and sweet, but not too\r\n              short so folks don&apos;t simply skip over it entirely.\r\n            </Typography> */}\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    startIcon={<AddCircleOutlinedIcon />}\r\n                    onClick={() => setOpenAddBoarDialog(true)}\r\n                  >\r\n                    Add a new board\r\n                  </Button>\r\n                  <Dialog\r\n                    open={openAddBoarDialog}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                  >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                      Create a new board\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                      <DialogContentText>\r\n                        <Typography>Create a new empty board.</Typography>\r\n                        <Typography>\r\n                          You can add columns by yourself later.\r\n                        </Typography>\r\n                      </DialogContentText>\r\n\r\n                      <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Board Name\"\r\n                        defaultValue=\"New board\"\r\n                        helperText=\"Enter name of the board\"\r\n                        onChange={(e) => handleChangeTextField(e)}\r\n                        // type=\"search\"\r\n                        required\r\n                        fullWidth\r\n                        on\r\n                      />\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                      <Button\r\n                        onClick={handleCreate}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                      >\r\n                        CREATE\r\n                      </Button>\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        variant=\"outlined\"\r\n                        color=\"default\"\r\n                      >\r\n                        Cancel\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </Grid>\r\n                {/* <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    See all boards\r\n                  </Button>\r\n                </Grid> */}\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            {contextBoards\r\n              .filter((board) => board.userId === user._id)\r\n              .map((board) => (\r\n                <BoardItem key={board._id} board={board} classes={classes} />\r\n              ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Something here to give the footer a purpose!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport BoardsList from \"./boards/BoardsList\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <div className={classes.root}>\n        <AppBar position=\"relative\">\n          {/* <Toolbar>\n            <GradientIcon className={classes.icon} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              FunRetroClone\n            </Typography>\n          </Toolbar> */}\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"simple tabs example\"\n          >\n            <Tab label=\"DASHBOARD\" {...a11yProps(0)} />\n            <Tab label=\"TEAM\" {...a11yProps(1)} />\n            <Tab label=\"ANALYTICS\" {...a11yProps(2)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <BoardsList\n            user={{\n              _id: \"5f942dfe446aa806e46b07a9\",\n            }}\n          ></BoardsList>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          TEAM PAGE\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n          ANALYTICS PAGE\n        </TabPanel>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { useState, useContext } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport { StoreContext } from \"../../utils/store\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"300px\",\r\n    backgroundColor: \"#EBECF0\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  editableContainer: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  editableTitle: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n    \"&:focus\": {\r\n      backgroundColor: \"#ddd\",\r\n    },\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  btnDeleteColumn: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function Title({ columnName, columnId }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const classes = useStyle();\r\n  const [newColName, setNewColName] = useState(columnName);\r\n  const { contextColumns, setContextColumns } = useContext(StoreContext);\r\n  const [openDeleteColumnDialog, setOpenDeleteColumnDialog] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setNewColName(e.target.value);\r\n  };\r\n\r\n  const handleBlur = async () => {\r\n    // update frontend\r\n    setContextColumns(\r\n      contextColumns.map((column) => {\r\n        if (column._id === columnId) {\r\n          column.name = newColName;\r\n        }\r\n        return column;\r\n      })\r\n    );\r\n\r\n    // update DB\r\n    // console.log(columnId);\r\n    const response = await axios.post(\r\n      // `http://localhost:4000/columns/update/${columnId}`,\r\n      `https://retro-clone-api.herokuapp.com/columns/update/${columnId}`,\r\n      {\r\n        name: newColName,\r\n      }\r\n    );\r\n    console.log(response);\r\n\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  const handleCloseDeleteColumnDialog = () => {\r\n    setOpenDeleteColumnDialog(false);\r\n  };\r\n\r\n  const handleAcceptDeleteColumnDialog = async () => {\r\n    // update frontend\r\n    setContextColumns(\r\n      contextColumns.filter((column) => column._id !== columnId)\r\n    );\r\n    // update DB\r\n    const response = await axios.delete(\r\n      `https://retro-clone-api.herokuapp.com/columns/${columnId}`\r\n    );\r\n    console.log(response);\r\n    setOpenDeleteColumnDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {isEditing ? (\r\n        <InputBase\r\n          onChange={(e) => handleChange(e)}\r\n          autoFocus\r\n          value={newColName}\r\n          inputProps={{\r\n            className: classes.input,\r\n          }}\r\n          fullWidth\r\n          onBlur={() => handleBlur()}\r\n        />\r\n      ) : (\r\n        <div className={classes.editableContainer}>\r\n          <Typography\r\n            className={classes.editableTitle}\r\n            onClick={() => setIsEditing(!isEditing)}\r\n          >\r\n            {columnName}\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      <Button\r\n        size=\"small\"\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.btnDeleteColumn}\r\n        startIcon={<DeleteIcon />}\r\n        onClick={() => setOpenDeleteColumnDialog(true)}\r\n      >\r\n        Delete\r\n      </Button>\r\n      <Dialog\r\n        open={openDeleteColumnDialog}\r\n        onClose={handleCloseDeleteColumnDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Delete this column?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            This action will not be able to revert!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleAcceptDeleteColumnDialog}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            autoFocus\r\n          >\r\n            Yes, delete it!\r\n          </Button>\r\n          <Button\r\n            onClick={handleCloseDeleteColumnDialog}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { InputBase, Paper, Button } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nimport axios from \"axios\";\r\nimport { StoreContext } from \"../../utils/store\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  // InputBase\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  btnConfirm: {\r\n    background: \"#5AAC44\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      background: fade(\"#5AAC44\", 0.25),\r\n    },\r\n  },\r\n  confirm: {\r\n    margin: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nexport default function InputCard({\r\n  type,\r\n  boardId,\r\n  columnId,\r\n  cardId,\r\n  authorId,\r\n  oldContent,\r\n  setIsOpen,\r\n}) {\r\n  const classes = useStyle();\r\n  const [content, setContent] = useState(oldContent ? oldContent : \"\");\r\n  const { contextCards, setContextCards } = useContext(StoreContext);\r\n  const { contextColumns, setContextColumns } = useContext(StoreContext);\r\n\r\n  const handleChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const addCard = async () => {\r\n    // if create but no content => cancel\r\n    if (!content) {\r\n      setIsOpen(false);\r\n      return;\r\n    }\r\n\r\n    const newCard = {\r\n      content,\r\n      authorId,\r\n      columnId,\r\n    };\r\n\r\n    const response = await axios.post(\r\n      \"https://retro-clone-api.herokuapp.com/cards/add\",\r\n      // \"http://localhost:4000/cards/add\",\r\n      newCard\r\n    );\r\n\r\n    setContextCards([...contextCards, response.data]);\r\n    setIsOpen(false);\r\n\r\n    console.log(\"FROM INPUTCARD.addCard: \" + response.data);\r\n    setContent(\"\");\r\n  };\r\n\r\n  const deleteCard = async (cardId) => {\r\n    const response = await axios.delete(\r\n      // `http://localhost:4000/cards/${cardId}`\r\n      `https://retro-clone-api.herokuapp.com/cards/${cardId}`\r\n    );\r\n    console.log(response);\r\n\r\n    // update frontend\r\n    setContextCards(contextCards.filter((card) => card._id !== cardId));\r\n\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const updateCard = async (oldContent) => {\r\n    if (!content) {\r\n      // update but content is null => delete\r\n      deleteCard(cardId);\r\n    } else {\r\n      // update the contextCards to fast update frontend\r\n      const updatedContextCards = contextCards.map((card) => {\r\n        if (card._id === cardId) {\r\n          card.content = content;\r\n        }\r\n        return card;\r\n      });\r\n\r\n      setContextCards(updatedContextCards);\r\n\r\n      // update DB\r\n      const response = await axios.get(\r\n        `https://retro-clone-api.herokuapp.com/cards/${cardId}`\r\n      );\r\n      const cardFound = response.data;\r\n      console.log(\"cardFound: \" + cardFound);\r\n\r\n      cardFound.content = content;\r\n      const updateResponse = await axios.post(\r\n        // `http://localhost:4000/cards/update/${cardId}`,\r\n        `https://retro-clone-api.herokuapp.com/cards/update/${cardId}`,\r\n        {\r\n          authorId: cardFound.authorId,\r\n          content: cardFound.content,\r\n          columnId: cardFound.columnId,\r\n        }\r\n      );\r\n      console.log(updateResponse);\r\n    }\r\n  };\r\n\r\n  const addColumn = async () => {\r\n    const response = await axios.post(\r\n      // \"http://localhost:4000/columns/add\",\r\n      \"https://retro-clone-api.herokuapp.com/columns/add\",\r\n      {\r\n        name: content,\r\n        boardId: boardId,\r\n      }\r\n    );\r\n    const newColumn = response.data;\r\n\r\n    if (newColumn) {\r\n      setContextColumns([...contextColumns, newColumn]);\r\n    } else {\r\n      // render 1 the? bao loi\r\n    }\r\n\r\n    setIsOpen(false);\r\n    setContent(\"\");\r\n  };\r\n\r\n  const handleBtnConfirm = async () => {\r\n    if (type === \"card\") {\r\n      if (oldContent) {\r\n        updateCard(oldContent);\r\n      } else {\r\n        addCard();\r\n      }\r\n    } else if (type === \"column\") {\r\n      addColumn();\r\n    } else if (type === \"board\") {\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (!content) {\r\n      // update but content is null => delete\r\n      setContent(oldContent);\r\n    }\r\n    // else if (oldContent) {\r\n    //   setContent(oldContent);\r\n    // }\r\n    // không handle chỗ này sẽ tốt hơn trong trường hợp người dùng đang edit và bấm mis chuột ra ngoài,\r\n    // khi bấm lại sẽ vẫn giữ được nội dung đang edit\r\n    // muốn khung edit có nội dung hiện tại của card thì xóa hết đi và bẩm ra ngoài là được\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleBtnCancel = () => {\r\n    if (oldContent) {\r\n      // updating but hit the clear button\r\n      setIsOpen(false);\r\n    } else {\r\n      setIsOpen(false);\r\n      setContent(\"\");\r\n    }\r\n    // setIsOpen(false);\r\n  };\r\n\r\n  const handleBtnDelete = () => {\r\n    deleteCard(cardId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Paper className={classes.card}>\r\n          <InputBase\r\n            onChange={(e) => handleChange(e)}\r\n            multiline\r\n            fullWidth\r\n            inputProps={{\r\n              className: classes.input,\r\n            }}\r\n            value={content}\r\n            onBlur={() => handleBlur()}\r\n            placeholder={\r\n              type === \"column\"\r\n                ? \"Enter column name\"\r\n                : \"Enter a content of this card ...\"\r\n            }\r\n          />\r\n        </Paper>\r\n      </div>\r\n      {/* confirm & delete button */}\r\n      {/* <div>\r\n        <Button\r\n          className={classes.btnConfirm}\r\n          onClick={() => handleBtnConfirm()}\r\n        >\r\n          {oldContent ? \"Update\" : \"Save\"}\r\n        </Button>\r\n\r\n        <IconButton onClick={() => handleBtnClear()}>\r\n          <ClearIcon />\r\n        </IconButton>\r\n      </div> */}\r\n      <div className={classes.confirm}>\r\n        <Button\r\n          variant=\"contained\"\r\n          // color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.btnConfirm}\r\n          startIcon={<SaveIcon />}\r\n          onClick={() => handleBtnConfirm()}\r\n        >\r\n          {oldContent ? \"Update\" : \"Save\"}\r\n        </Button>\r\n\r\n        {oldContent ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            // className={classes.button}\r\n            startIcon={<DeleteIcon />}\r\n            onClick={() => handleBtnDelete()}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            size=\"small\"\r\n            // className={classes.button}\r\n            startIcon={<ClearIcon />}\r\n            onClick={() => handleBtnCancel()}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport InputCard from \"./InputCard\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: \"300px\",\r\n  },\r\n  addANewCardOrColumn: {\r\n    padding: theme.spacing(1, 1, 1, 2),\r\n    margin: theme.spacing(1, 1, 1, 1),\r\n    // background: \"#EBECF0\",\r\n    background: \"#5AAC44\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: fade(\"#5AAC44\", 0.25),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function InputContainer({ type, boardId, columnId, authorId }) {\r\n  const classes = useStyle();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={isOpen}>\r\n        <InputCard\r\n          type={type}\r\n          boardId={boardId}\r\n          columnId={columnId}\r\n          authorId={authorId}\r\n          setIsOpen={setIsOpen}\r\n        />\r\n      </Collapse>\r\n      <Collapse in={!isOpen}>\r\n        <Paper\r\n          className={classes.addANewCardOrColumn}\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          elevation={3}\r\n        >\r\n          <Typography>\r\n            {type === \"board\"\r\n              ? \"Add a board\"\r\n              : type === \"column\"\r\n              ? \"+ Add a column\"\r\n              : \"+ Add a card\"}\r\n          </Typography>\r\n        </Paper>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport InputCard from \"../Input/InputCard\";\r\nimport { Collapse, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    // margin: theme.spacing(1),\r\n  },\r\n  card: {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1),\r\n    minHeight: \"2.5rem\",\r\n    background: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: fade(\"#000\", 0.1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Card({ card }) {\r\n  const classes = useStyle();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={isOpen}>\r\n        <InputCard\r\n          type=\"card\"\r\n          cardId={card._id}\r\n          columnId={card.columnId}\r\n          authorId={card.authorId}\r\n          setIsOpen={setIsOpen}\r\n          oldContent={card.content ? card.content : null}\r\n        />\r\n      </Collapse>\r\n      <Collapse in={!isOpen}>\r\n        <Paper\r\n          className={classes.card}\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          elevation={0}\r\n        >\r\n          <Typography>{card.content}</Typography>\r\n        </Paper>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","import { CssBaseline } from \"@material-ui/core\";\r\nimport React, { useEffect, useContext } from \"react\";\r\nimport Title from \"./Title\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputContainer from \"../Input/InputContainer\";\r\nimport Card from \"./Card\";\r\nimport axios from \"axios\";\r\nimport { StoreContext } from \"../../utils/store\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"300px\",\r\n    backgroundColor: \"#EBECF0\",\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Column({ column }) {\r\n  const classes = useStyle();\r\n  const { contextCards, setContextCards } = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    async function getAllCardsFromColumn(columnId) {\r\n      const response = await axios.get(\r\n        \"https://retro-clone-api.herokuapp.com/cards\"\r\n      );\r\n      setContextCards(response.data); // get all the cards of all columns of all boards\r\n    }\r\n    getAllCardsFromColumn(column._id);\r\n  }, [column._id, setContextCards]);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root} elevation={3}>\r\n        <CssBaseline />\r\n        <Title columnName={column.name} columnId={column._id} />\r\n        {contextCards\r\n          .filter((card) => card.columnId === column._id)\r\n          .map((card) => (\r\n            <Card key={card._id} card={card} />\r\n          ))}\r\n        <InputContainer type=\"card\" columnId={column._id} authorId=\"123test\" />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport Column from \"../columns/Column\";\r\nimport { StoreContext } from \"../../utils/store\";\r\nimport InputContainer from \"../Input/InputContainer\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { InputBase } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  boardTitle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  columnsContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  column: {\r\n    backgroundColor: \"#EBECF0\",\r\n    margin: theme.spacing(2, 2, 2, 2),\r\n  },\r\n  columnNameInput: {\r\n    backgroundColor: \"#EBECF0\",\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n    \"&:focus\": {\r\n      backgroundColor: \"#ddd\",\r\n    },\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function BoardDetails() {\r\n  // const { board } = useLocation();\r\n  const { id } = useParams();\r\n  const [board, setBoard] = useState({});\r\n  const { contextColumns, setContextColumns } = useContext(StoreContext);\r\n  const history = useHistory();\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const classes = useStyle();\r\n\r\n  useEffect(() => {\r\n    async function getBoard(boardId) {\r\n      const response = await axios.get(\r\n        // `http://localhost:4000/boards/${boardId}`\r\n        `https://retro-clone-api.herokuapp.com/boards/${boardId}`\r\n      );\r\n      setBoard(response.data);\r\n    }\r\n    getBoard(id);\r\n\r\n    async function getAllColumnsFromBoard(boardId) {\r\n      const response = await axios.get(\r\n        \"https://retro-clone-api.herokuapp.com/columns\"\r\n      );\r\n      const columns = response.data.filter(\r\n        (column) => column.boardId === boardId\r\n      );\r\n      setContextColumns(columns);\r\n    }\r\n    getAllColumnsFromBoard(id);\r\n  }, [id, setContextColumns]);\r\n\r\n  const handleBoardNameChange = (e) => {\r\n    setBoard({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n  const handleBlur = async () => {\r\n    // update DB\r\n    const response = await axios.post(\r\n      // `http://localhost:4000/boards/update/${id}`,\r\n      `https://retro-clone-api.herokuapp.com/boards/update/${id}`,\r\n      {\r\n        name: board.name,\r\n      }\r\n    );\r\n    console.log(response);\r\n  };\r\n\r\n  const handleDeleteBoard = async () => {\r\n    // update DB\r\n    // const response = await axios.delete(`http://localhost:4000/boards/${id}`);\r\n    const response = await axios.delete(\r\n      `https://retro-clone-api.herokuapp.com/boards/${id}`\r\n    );\r\n    console.log(response.data);\r\n\r\n    history.goBack();\r\n  };\r\n\r\n  const handleCloseDeleteDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const handleAcceptDeleteDialog = () => {\r\n    handleDeleteBoard();\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.boardTitle}>\r\n        <InputBase\r\n          className={classes.columnNameInput}\r\n          value={board.name}\r\n          onChange={(e) => handleBoardNameChange(e)}\r\n          inputProps={{\r\n            className: classes.input,\r\n          }}\r\n          fullWidth\r\n          onBlur={() => handleBlur()}\r\n        ></InputBase>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n          startIcon={<DeleteIcon />}\r\n          onClick={() => setOpenDeleteDialog(true)}\r\n        >\r\n          Delete board\r\n        </Button>\r\n        <Dialog\r\n          open={openDeleteDialog}\r\n          onClose={handleCloseDeleteDialog}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Delete this board?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              This action will not be able to revert!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={handleAcceptDeleteDialog}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              autoFocus\r\n            >\r\n              Yes, delete it!\r\n            </Button>\r\n            <Button\r\n              onClick={handleCloseDeleteDialog}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      <div className={classes.columnsContainer}>\r\n        {contextColumns.map((column) => (\r\n          <Column key={column._id} column={column} />\r\n        ))}\r\n\r\n        {/* The new col to add stands on the right of columns */}\r\n        <div>\r\n          <Paper elevation={3} className={classes.column}>\r\n            {/* <InputContainer columnId={column._id} authorId=\"123test\" /> */}\r\n            <InputContainer type=\"column\" boardId={id} />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport SimpleTabs from \"./components/SimpleTabs\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport GradientIcon from \"@material-ui/icons/Gradient\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport BoardDetails from \"./components/boards/BoardDetails\";\nimport StoreContextProvider from \"./utils/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    margin: theme.spacing(1),\n    color: \"#fff\",\n  },\n  navLinkHome: {\n    display: \"flex\",\n    alignItems: \"center\",\n    textDecoration: \"none\",\n    \"&:focus, &:hover, &:visited, &:link, &:active\": {\n      textDecoration: \"none\",\n    },\n    color: \"#fff\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <StoreContextProvider>\n      <Router>\n        <AppBar position=\"relative\">\n          <Toolbar>\n            <Link\n              to=\"/\"\n              style={{ textDecoration: \"none\" }}\n              className={classes.navLinkHome}\n            >\n              <GradientIcon className={classes.icon} />\n\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                FunRetroClone\n              </Typography>\n            </Link>\n          </Toolbar>\n        </AppBar>\n\n        <Route path=\"/\" exact component={SimpleTabs} />\n        <Route path=\"/boards\" exact component={SimpleTabs} />\n        <Route path=\"/boards/:id\" component={BoardDetails} />\n      </Router>\n    </StoreContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}