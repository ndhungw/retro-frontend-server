{"version":3,"sources":["views/Home/Home.js","components/columns/title.js","components/input/input-card.js","components/input/input-container.js","components/cards/card.js","components/columns/column.js","components/boards/board-details.js","utils/store.js","context/auth.js","components/auth/login.js","components/auth/signup.js","components/user/UserMedal.js","components/boards/board-item.js","components/boards/board-list.js","views/UserProfile/UserProfile.js","auth/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useStyle","makeStyles","theme","root","width","backgroundColor","display","justifyContent","editableContainer","margin","spacing","editableTitle","fontSize","fontWeight","input","iconBtnDeleteColumns","marginRight","Title","columnName","columnId","deleteColumnFromBoard","changeColumnNameFromBoard","useState","isEditing","setIsEditing","classes","newColName","setNewColName","openDeleteColumnDialog","setOpenDeleteColumnDialog","handleBlur","a","axios","post","name","handleCloseDeleteColumnDialog","handleAcceptDeleteColumnDialog","delete","className","InputBase","onChange","e","target","value","handleChange","autoFocus","inputProps","fullWidth","onBlur","Typography","onClick","IconButton","aria-label","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","variant","color","card","btnConfirm","background","fade","confirm","InputCard","type","boardId","cardId","userId","oldContent","setIsOpen","addCardFromColumn","deleteCardFromColumn","updateCardFromColumn","addColumnFromBoard","content","setContent","addCard","newCard","response","data","deleteCard","updateCard","updateResponse","addColumn","newColumn","handleBtnConfirm","Paper","multiline","placeholder","size","startIcon","minWidth","addANewCardOrColumn","padding","InputContainer","isOpen","Collapse","in","elevation","authorName","Card","index","user","setUser","useEffect","Axios","get","userResponse","console","log","getUserInfo","draggableId","_id","provided","ref","innerRef","dragHandleProps","draggableProps","authorId","style","wordWrap","align","username","cardContainer","marginTop","Column","column","cardsList","CssBaseline","droppableId","droppableProps","key","map","boardTitle","columnsContainer","flexWrap","columnNameInput","BoardDetails","useParams","setBoard","boardName","setBoardName","columns","setColumns","openDeleteDialog","setOpenDeleteDialog","history","useHistory","allCards","setAllCards","board","getAllCards","getBoard","getAllColumnsFromBoard","handleDeleteBoard","goBack","handleCloseDeleteDialog","filter","newColumnName","newColumns","newCardIdsList","cardIdsList","onDragEnd","result","source","destination","sourceColumnId","destinationColumnId","columnToChange","slice","splice","sourceColumn","toString","destinationColumn","newSourceColumnCardIdsList","newDestinationColumnCardIdsList","newColumnsList","handleBoardNameChange","button","StoreContext","React","createContext","StoreContextProvider","children","contextBoards","setContextBoards","contextColumns","setContextColumns","store","contextCards","setContextCards","Provider","AuthContext","useAuth","useContext","Copyright","Link","href","Date","getFullYear","useStyles","paper","flexDirection","alignItems","avatar","palette","secondary","main","form","submit","errorMessage","Login","props","location","useLocation","msgFromSignUp","state","message","usernameFromSignUp","isLoggedIn","setLoggedIn","isError","setIsError","setUsername","isInvalidUsername","setIsInvalidUsername","isInvalidPassword","setIsInvalidPassword","password","setPassword","setAuthTokens","postLogin","preventDefault","status","token","to","Container","component","maxWidth","Avatar","noValidate","Alert","severity","TextField","required","label","autoComplete","currentUsername","test","handleChangeUsername","error","helperText","currentPassword","handleChangePassword","FormControlLabel","control","Checkbox","disabled","Grid","container","item","xs","Box","mt","SignUp","password2","setPassword2","isInvalidPassword2","setIsInvalidPassword2","email","setEmail","isInvalidEmail","setIsInvalidEmail","phone","setPhone","isInvalidPhone","setIsInvalidPhone","errorMsg","setErrorMsg","isSignedUp","setIsSignedUp","pathname","postSignUp","interceptors","use","Promise","reject","signUpResponse","currentEmail","handleChangeEmail","currentPhone","handleChangePhone","currentPassword2","handleChangePassword2","justify","icon","toolbar","menuIcon","UserMedal","anchorEl","setAnchorEl","aria-controls","aria-haspopup","event","currentTarget","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","BoardItem","sm","md","CardActionArea","CardMedia","cardMedia","image","title","CardContent","cardContent","gutterBottom","createdAt","toLocaleString","CardActions","heroContent","heroButtons","cardGrid","paddingTop","paddingBottom","height","flexGrow","footer","BoardsList","openAddBoarDialog","setOpenAddBoarDialog","newBoardName","setNewBoardName","boards","setBoards","getAllBoards","handleClose","handleCreate","newBoard","Fragment","defaultValue","handleChangeTextField","on","direction","cardCategoryWhite","marginBottom","cardTitleWhite","minHeight","fontFamily","textDecoration","UserProfile","isInvalidNewPassword","setIsInvalidNewPassword","isInvalidNewPassword2","setIsInvalidNewPassword2","isEditedProfile","setIsEditedProfile","getUserInfoResponse","postUpdateProfile","updateUserResponse","InputProps","readOnly","handleChangeNewPassword","handleChangeNewPassword2","PrivateRoute","rest","authTokens","navLinkHome","App","existingTokens","JSON","parse","localStorage","getItem","defaults","headers","common","getUser","setItem","stringify","AppBar","position","Toolbar","noWrap","path","exact","Signup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de79c566.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div>\r\n      <p>HOME</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"300px\",\r\n    backgroundColor: \"#EBECF0\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  editableContainer: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  editableTitle: {\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n    \"&:focus\": {\r\n      backgroundColor: \"#ddd\",\r\n    },\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  iconBtnDeleteColumns: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\nexport default function Title({\r\n  columnName,\r\n  columnId,\r\n  deleteColumnFromBoard,\r\n  changeColumnNameFromBoard,\r\n}) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const classes = useStyle();\r\n  const [newColName, setNewColName] = useState(columnName ? columnName : \"\");\r\n  const [openDeleteColumnDialog, setOpenDeleteColumnDialog] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setNewColName(e.target.value);\r\n  };\r\n\r\n  const handleBlur = async () => {\r\n    // update frontend\r\n    changeColumnNameFromBoard(columnId, newColName);\r\n\r\n    // update DB\r\n    // const response =\r\n    await axios.post(\r\n      // `http://localhost:4000/columns/update/${columnId}`,\r\n      `https://retro-clone-api.herokuapp.com/columns/update/${columnId}`,\r\n      {\r\n        name: newColName,\r\n      }\r\n    );\r\n    // console.log(response);\r\n\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  const handleCloseDeleteColumnDialog = () => {\r\n    setOpenDeleteColumnDialog(false);\r\n  };\r\n\r\n  const handleAcceptDeleteColumnDialog = async () => {\r\n    // update frontend\r\n    deleteColumnFromBoard(columnId);\r\n    // update DB\r\n    // const response =\r\n    await axios.delete(\r\n      `https://retro-clone-api.herokuapp.com/columns/${columnId}`\r\n      // `http://localhost:4000/columns/${columnId}`\r\n    );\r\n    // console.log(response);\r\n    setOpenDeleteColumnDialog(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {isEditing ? (\r\n        <InputBase\r\n          onChange={(e) => handleChange(e)}\r\n          autoFocus\r\n          value={newColName}\r\n          inputProps={{\r\n            className: classes.input,\r\n          }}\r\n          fullWidth\r\n          onBlur={() => handleBlur()}\r\n        />\r\n      ) : (\r\n        <div className={classes.editableContainer}>\r\n          <Typography\r\n            className={classes.editableTitle}\r\n            onClick={() => setIsEditing(!isEditing)}\r\n          >\r\n            {columnName}\r\n          </Typography>\r\n        </div>\r\n      )}\r\n      <IconButton\r\n        aria-label=\"delete\"\r\n        className={classes.iconBtnDeleteColumns}\r\n        onClick={() => setOpenDeleteColumnDialog(true)}\r\n      >\r\n        <DeleteIcon fontSize=\"small\" />\r\n      </IconButton>\r\n      <Dialog\r\n        open={openDeleteColumnDialog}\r\n        onClose={handleCloseDeleteColumnDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Delete this column?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            This action will not be able to revert!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleAcceptDeleteColumnDialog}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            autoFocus\r\n          >\r\n            Yes, delete it!\r\n          </Button>\r\n          <Button\r\n            onClick={handleCloseDeleteColumnDialog}\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { InputBase, Paper, Button } from \"@material-ui/core\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  card: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  // InputBase\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  btnConfirm: {\r\n    background: \"#5AAC44\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      background: fade(\"#5AAC44\", 0.25),\r\n    },\r\n  },\r\n  confirm: {\r\n    margin: theme.spacing(1),\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nexport default function InputCard({\r\n  type,\r\n  boardId,\r\n  columnId,\r\n  cardId,\r\n  userId,\r\n  oldContent,\r\n  setIsOpen,\r\n  addCardFromColumn,\r\n  deleteCardFromColumn,\r\n  updateCardFromColumn,\r\n  addColumnFromBoard,\r\n}) {\r\n  const classes = useStyle();\r\n  const [content, setContent] = useState(oldContent ? oldContent : \"\");\r\n\r\n  const handleChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const addCard = async () => {\r\n    // if create but no content => cancel\r\n    if (!content) {\r\n      setIsOpen(false);\r\n      return;\r\n    }\r\n\r\n    const newCard = {\r\n      content,\r\n      userId,\r\n      columnId,\r\n    };\r\n\r\n    const response = await axios.post(\r\n      \"https://retro-clone-api.herokuapp.com/cards/add\",\r\n      // \"http://localhost:4000/cards/add\",\r\n      newCard\r\n    );\r\n\r\n    addCardFromColumn(response.data);\r\n\r\n    // setContextCards([...contextCards, response.data]);\r\n    setIsOpen(false);\r\n\r\n    // console.log(\"FROM INPUTCARD.addCard: \" + response.data);\r\n    setContent(\"\");\r\n  };\r\n\r\n  const deleteCard = async (cardId) => {\r\n    // const response =\r\n    await axios.delete(\r\n      // `http://localhost:4000/cards/${cardId}`\r\n      `https://retro-clone-api.herokuapp.com/cards/${cardId}`\r\n    );\r\n    // console.log(response);\r\n\r\n    // update frontend\r\n    // setContextCards(contextCards.filter((card) => card._id !== cardId));\r\n    deleteCardFromColumn(cardId);\r\n\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const updateCard = async (oldContent) => {\r\n    if (!content) {\r\n      // update but content is null => delete\r\n      deleteCard(cardId);\r\n    } else {\r\n      const updateResponse = await axios.post(\r\n        // `http://localhost:4000/cards/update/${cardId}`,\r\n        `https://retro-clone-api.herokuapp.com/cards/update/${cardId}`,\r\n        {\r\n          // userId: cardFound.userId,\r\n          // content: cardFound.content,\r\n          // columnId: cardFound.columnId,\r\n          content: content,\r\n        }\r\n      );\r\n      // console.log(\"UpdateResponse\");\r\n      // console.log(updateResponse.data);\r\n      updateCardFromColumn(updateResponse.data);\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const addColumn = async () => {\r\n    const response = await axios.post(\r\n      // \"http://localhost:4000/columns/add\",\r\n      \"https://retro-clone-api.herokuapp.com/columns/add\",\r\n      {\r\n        name: content,\r\n        boardId: boardId,\r\n      }\r\n    );\r\n    const newColumn = response.data;\r\n\r\n    if (newColumn) {\r\n      // setContextColumns([...contextColumns, newColumn]);\r\n      // console.log(\"InputCard calls addColumnFromBoard\");\r\n      // console.log(newColumn);\r\n      addColumnFromBoard(newColumn);\r\n    } else {\r\n      // render 1 the? bao loi\r\n    }\r\n\r\n    setIsOpen(false);\r\n    setContent(\"\");\r\n  };\r\n\r\n  const handleBtnConfirm = async () => {\r\n    if (type === \"card\") {\r\n      if (oldContent) {\r\n        updateCard(oldContent);\r\n      } else {\r\n        addCard();\r\n      }\r\n    } else if (type === \"column\") {\r\n      addColumn();\r\n    } else if (type === \"board\") {\r\n    }\r\n  };\r\n\r\n  // const handleBlur = () => {\r\n  //   if (!content) {\r\n  //     // update but content is null => delete\r\n  //     setContent(oldContent);\r\n  //   }\r\n  //   // else if (oldContent) {\r\n  //   //   setContent(oldContent);\r\n  //   // }\r\n  //   // không handle chỗ này sẽ tốt hơn trong trường hợp người dùng đang edit và bấm mis chuột ra ngoài,\r\n  //   // khi bấm lại sẽ vẫn giữ được nội dung đang edit\r\n  //   // muốn khung edit có nội dung hiện tại của card thì xóa hết đi và bẩm ra ngoài là được\r\n  //   setIsOpen(false);\r\n  // };\r\n\r\n  const handleBtnCancel = () => {\r\n    if (oldContent) {\r\n      // updating but hit the clear button\r\n      setIsOpen(false);\r\n    } else {\r\n      setIsOpen(false);\r\n      setContent(\"\");\r\n    }\r\n    // setIsOpen(false);\r\n  };\r\n\r\n  const handleBtnDelete = () => {\r\n    deleteCard(cardId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Paper className={classes.card}>\r\n          <InputBase\r\n            onChange={(e) => handleChange(e)}\r\n            multiline\r\n            fullWidth\r\n            inputProps={{\r\n              className: classes.input,\r\n            }}\r\n            value={content}\r\n            // onBlur={() => handleBlur()}\r\n            placeholder={\r\n              type === \"column\"\r\n                ? \"Enter column name\"\r\n                : \"Enter a content of this card ...\"\r\n            }\r\n          />\r\n        </Paper>\r\n      </div>\r\n      {/* confirm & delete button */}\r\n      {/* <div>\r\n        <Button\r\n          className={classes.btnConfirm}\r\n          onClick={() => handleBtnConfirm()}\r\n        >\r\n          {oldContent ? \"Update\" : \"Save\"}\r\n        </Button>\r\n\r\n        <IconButton onClick={() => handleBtnClear()}>\r\n          <ClearIcon />\r\n        </IconButton>\r\n      </div> */}\r\n      <div className={classes.confirm}>\r\n        <Button\r\n          variant=\"contained\"\r\n          // color=\"primary\"\r\n          size=\"small\"\r\n          className={classes.btnConfirm}\r\n          startIcon={<SaveIcon />}\r\n          onClick={() => handleBtnConfirm()}\r\n        >\r\n          {oldContent ? \"Update\" : \"Save\"}\r\n        </Button>\r\n\r\n        {oldContent ? (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            // className={classes.button}\r\n            startIcon={<DeleteIcon />}\r\n            onClick={() => handleBtnDelete()}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"default\"\r\n            size=\"small\"\r\n            // className={classes.button}\r\n            startIcon={<ClearIcon />}\r\n            onClick={() => handleBtnCancel()}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport { Collapse } from \"@material-ui/core\";\r\nimport InputCard from \"./input-card\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    minWidth: \"300px\",\r\n  },\r\n  addANewCardOrColumn: {\r\n    padding: theme.spacing(1, 1, 1, 2),\r\n    margin: theme.spacing(1, 1, 1, 1),\r\n    // background: \"#EBECF0\",\r\n    background: \"#5AAC44\",\r\n    color: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: fade(\"#5AAC44\", 0.25),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function InputContainer({\r\n  type,\r\n  boardId,\r\n  columnId,\r\n  userId,\r\n  addCardFromColumn,\r\n  addColumnFromBoard,\r\n}) {\r\n  const classes = useStyle();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Collapse in={isOpen}>\r\n        <InputCard\r\n          type={type}\r\n          boardId={boardId}\r\n          columnId={columnId}\r\n          userId={userId}\r\n          setIsOpen={setIsOpen}\r\n          addCardFromColumn={addCardFromColumn}\r\n          addColumnFromBoard={addColumnFromBoard}\r\n        />\r\n      </Collapse>\r\n      <Collapse in={!isOpen}>\r\n        <Paper\r\n          className={classes.addANewCardOrColumn}\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          elevation={3}\r\n        >\r\n          <Typography>\r\n            {type === \"board\"\r\n              ? \"Add a board\"\r\n              : type === \"column\"\r\n              ? \"+ Add a column\"\r\n              : \"+ Add a card\"}\r\n          </Typography>\r\n        </Paper>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport InputCard from \"../input/input-card\";\r\nimport { Collapse, Typography } from \"@material-ui/core\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Axios from \"axios\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    // margin: theme.spacing(1),\r\n  },\r\n  card: {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1),\r\n    // minHeight: \"2.5rem\",\r\n    background: \"#fff\",\r\n    \"&:hover\": {\r\n      backgroundColor: fade(\"#000\", 0.1),\r\n    },\r\n  },\r\n  authorName: {\r\n    fontSize: \"0.6rem\",\r\n  },\r\n}));\r\n\r\nexport default function Card({\r\n  card,\r\n  deleteCardFromColumn,\r\n  updateCardFromColumn,\r\n  index,\r\n}) {\r\n  const classes = useStyle();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    async function getUserInfo() {\r\n      // user that is author of this card may be another user, not the logging user\r\n      const userResponse = await Axios.get(\r\n        // `http://localhost:4000/users/${card.userId}`\r\n        `https://retro-clone-api.herokuapp.com/users/${card.userId}`\r\n      );\r\n      const user = userResponse.data;\r\n      setUser(user);\r\n      console.log(\"card.getUserInfo: user\", user);\r\n    }\r\n    getUserInfo();\r\n  }, [card.userId]);\r\n\r\n  return (\r\n    <Draggable draggableId={card._id} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.dragHandleProps}\r\n          {...provided.draggableProps}\r\n        >\r\n          <div className={classes.root}>\r\n            <Collapse in={isOpen}>\r\n              <InputCard\r\n                type=\"card\"\r\n                cardId={card._id}\r\n                columnId={card.columnId}\r\n                authorId={card.authorId}\r\n                setIsOpen={setIsOpen}\r\n                oldContent={card.content ? card.content : null}\r\n                deleteCardFromColumn={deleteCardFromColumn}\r\n                updateCardFromColumn={updateCardFromColumn}\r\n              />\r\n            </Collapse>\r\n            <Collapse in={!isOpen}>\r\n              <Paper\r\n                className={classes.card}\r\n                onClick={() => setIsOpen(!isOpen)}\r\n                elevation={0}\r\n              >\r\n                <Typography style={{ wordWrap: \"break-word\" }} display=\"inline\">\r\n                  {card.content}\r\n                </Typography>\r\n                <Typography\r\n                  align=\"right\"\r\n                  color=\"textSecondary\"\r\n                  className={classes.authorName}\r\n                >\r\n                  {user && \"Author: \" + user.username}\r\n                </Typography>\r\n              </Paper>\r\n            </Collapse>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n","import { CssBaseline } from \"@material-ui/core\";\r\nimport React, {\r\n  useEffect,\r\n  // useState\r\n} from \"react\";\r\nimport Title from \"./title\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputContainer from \"../input/input-container\";\r\nimport Card from \"../cards/card\";\r\n// import axios from \"axios\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"300px\",\r\n    backgroundColor: \"#EBECF0\",\r\n    margin: theme.spacing(2),\r\n  },\r\n  cardContainer: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Column({\r\n  column,\r\n  deleteColumnFromBoard,\r\n  changeColumnNameFromBoard,\r\n  cardsList,\r\n  // allCards,\r\n  addCardFromColumn,\r\n  updateCardFromColumn,\r\n  deleteCardFromColumn,\r\n  index,\r\n  user,\r\n}) {\r\n  const classes = useStyle();\r\n  // const [cards, setCards] = useState([]);\r\n\r\n  useEffect(\r\n    () => {\r\n      //     async function getAllCardsFromColumn(columnId) {\r\n      //       const response = await axios.get(\r\n      //         // `https://retro-clone-api.herokuapp.com/cards?columnId=${columnId}`,\r\n      //         `http://localhost:4000/cards?columnId=${columnId}`\r\n      //       );\r\n      //       console.log(\"column.js: useEffect : response.data\", response.data);\r\n      //       setCards(response.data);\r\n      //     }\r\n      //     getAllCardsFromColumn(column._id);\r\n      //     function sort(cards, cardIdsList) {\r\n      //       const sortedCardsList = cardIdsList.map((cardId) => {\r\n      //         const selectedCards = cards.filter((card) => card._id === cardId);\r\n      //         return selectedCards[0];\r\n      //       });\r\n      //       // console.log(\"sortedCardsList: \", sortedCardsList);\r\n      //       return sortedCardsList;\r\n      //     }\r\n      //     const cards = column.cardIdsList.map((cardId) => {\r\n      //       return allCards.filter(\r\n      //         (card) => card._id.toString() === cardId.toString()\r\n      //       )[0];\r\n      //     });\r\n      //     setCards(cards);\r\n      //     setCards(cardsList);\r\n      //----\r\n      // const cardsList = column.cardIdsList.map(\r\n      //   (cardId) =>\r\n      //     allCards.filter(\r\n      //       (card) => card._id.toString() === cardId.toString()\r\n      //     )[0]\r\n      // );\r\n      // setCards(cardsList);\r\n      //-----\r\n      // setCards(cardsList);\r\n    },\r\n    [\r\n      //     column._id, column.cardIdsList\r\n    ]\r\n  );\r\n\r\n  // const addCardFromColumn = async (newCard) => {\r\n  //   setCards([...cards, newCard]);\r\n  //   //--\r\n  //   // const newCardsList = [...cardsList, newCard];\r\n  //   // cardsList = newCardsList;\r\n  // };\r\n\r\n  // const updateCardFromColumn = async (newCard) => {\r\n  //   setCards(cards.map((card) => (card._id === newCard._id ? newCard : card)));\r\n  //   // --\r\n  //   // const newCardsList = cardsList.map((card) =>\r\n  //   //   card._id === newCard._id ? newCard : card\r\n  //   // );\r\n  //   // cardsList = newCardsList;\r\n  // };\r\n\r\n  // const deleteCardFromColumn = async (cardId) => {\r\n  //   setCards(cards.filter((card) => card._id !== cardId));\r\n  //   // --\r\n  //   // const newCardsList = cardsList.filter((card) => card._id !== cardId);\r\n  //   // cardsList = newCardsList;\r\n  // };\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root} elevation={3}>\r\n        <CssBaseline />\r\n        <Title\r\n          columnName={column.name}\r\n          columnId={column._id}\r\n          deleteColumnFromBoard={deleteColumnFromBoard}\r\n          changeColumnNameFromBoard={changeColumnNameFromBoard}\r\n        />\r\n        <Droppable droppableId={column._id}>\r\n          {(provided) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              {...provided.droppableProps}\r\n              className={classes.cardContainer}\r\n              key={index}\r\n            >\r\n              {cardsList.map((card, index) =>\r\n                card ? (\r\n                  <Card\r\n                    key={card._id}\r\n                    card={card}\r\n                    updateCardFromColumn={updateCardFromColumn}\r\n                    deleteCardFromColumn={deleteCardFromColumn}\r\n                    index={index}\r\n                    user={user}\r\n                  />\r\n                ) : (\r\n                  <></>\r\n                )\r\n              )}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n        <InputContainer\r\n          addCardFromColumn={addCardFromColumn}\r\n          type=\"card\"\r\n          columnId={column._id}\r\n          userId={user._id}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { InputBase } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nimport Column from \"../columns/column\";\r\nimport InputContainer from \"../input/input-container\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  boardTitle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  columnsContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  column: {\r\n    backgroundColor: \"#EBECF0\",\r\n    margin: theme.spacing(2, 2, 2, 2),\r\n  },\r\n  columnNameInput: {\r\n    backgroundColor: \"#EBECF0\",\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n    \"&:focus\": {\r\n      backgroundColor: \"#ddd\",\r\n    },\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nexport default function BoardDetails({ user }) {\r\n  const { id } = useParams();\r\n  const [board, setBoard] = useState({});\r\n  const [boardName, setBoardName] = useState(``);\r\n  const [columns, setColumns] = useState([]);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const history = useHistory();\r\n  const classes = useStyle();\r\n  const [allCards, setAllCards] = useState([]);\r\n  // const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function getAllCards() {\r\n      const response = await axios.get(\r\n        // `http://localhost:4000/cards`\r\n        `https://retro-clone-api.herokuapp.com/cards`\r\n      );\r\n      setAllCards(response.data);\r\n      // console.log(\"getAllCards: \", response.data);\r\n    }\r\n    getAllCards();\r\n\r\n    async function getBoard(boardId) {\r\n      const response = await axios.get(\r\n        // `http://localhost:4000/boards/${boardId}`\r\n        `https://retro-clone-api.herokuapp.com/boards/${boardId}`\r\n      );\r\n      const board = response.data;\r\n      console.log(\"boards\", board);\r\n      setBoard(board);\r\n      setBoardName(board.name);\r\n    }\r\n    getBoard(id);\r\n\r\n    async function getAllColumnsFromBoard(boardId) {\r\n      const response = await axios.get(\r\n        // `http://localhost:4000/columns?boardId=${boardId}`,\r\n        `https://retro-clone-api.herokuapp.com/columns?boardId=${boardId}`\r\n      );\r\n      const columns = response.data;\r\n      // console.log(\"getAllColumnsFromBoard: \", columns);\r\n      setColumns(columns);\r\n    }\r\n    getAllColumnsFromBoard(id);\r\n  }, [id]);\r\n\r\n  const handleBoardNameChange = (e) => {\r\n    setBoardName(e.target.value);\r\n  };\r\n  const handleBlur = async () => {\r\n    // update DB\r\n    const response = await axios.post(\r\n      // `http://localhost:4000/boards/update/${id}`,\r\n      `https://retro-clone-api.herokuapp.com/boards/update/${id}`,\r\n      {\r\n        name: boardName,\r\n      }\r\n    );\r\n    console.log(response);\r\n  };\r\n\r\n  const handleDeleteBoard = async () => {\r\n    // update DB\r\n    // const response =\r\n    await axios.delete(\r\n      // `http://localhost:4000/boards/${id}`\r\n      `https://retro-clone-api.herokuapp.com/boards/${id}`\r\n    );\r\n    // console.log(response.data);\r\n\r\n    history.goBack();\r\n  };\r\n\r\n  const handleCloseDeleteDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const handleAcceptDeleteDialog = () => {\r\n    handleDeleteBoard();\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const addColumnFromBoard = (newColumn) => {\r\n    setColumns([...columns, newColumn]);\r\n  };\r\n\r\n  const deleteColumnFromBoard = (columnId) => {\r\n    setColumns(columns.filter((column) => column._id !== columnId));\r\n  };\r\n\r\n  const changeColumnNameFromBoard = (columnId, newColumnName) => {\r\n    setColumns(\r\n      columns.map((column) => {\r\n        if (column._id === columnId) {\r\n          column.name = newColumnName;\r\n        }\r\n        return column;\r\n      })\r\n    );\r\n  };\r\n\r\n  const addCardFromColumn = async (newCard) => {\r\n    setAllCards([...allCards, newCard]);\r\n    const newColumns = columns.map((column) => {\r\n      if (column._id === newCard.columnId) {\r\n        const newCardIdsList = [...column.cardIdsList, newCard._id];\r\n        column.cardIdsList = newCardIdsList;\r\n      }\r\n      return column;\r\n    });\r\n    setColumns(newColumns);\r\n  };\r\n\r\n  const updateCardFromColumn = async (newCard) => {\r\n    setAllCards(\r\n      allCards.map((card) => (card._id === newCard._id ? newCard : card))\r\n    );\r\n  };\r\n\r\n  const deleteCardFromColumn = async (cardId) => {\r\n    setAllCards(allCards.filter((card) => card._id !== cardId));\r\n  };\r\n\r\n  // const getCardsListOfColumn = async (column, cards) => {\r\n  //   console.log(\"getCardsListOfColumn\");\r\n  //   console.log(\"column\", column);\r\n  //   console.log(\"cards\", cards);\r\n  //   // if (!cards) {\r\n  //   //   await getAllCards();\r\n  //   // }\r\n  //   const result = column.cardIdsList.map((cardId) => {\r\n  //     const filtered = cards.filter((card) => {\r\n  //       console.log(\"card in filter\", card);\r\n  //       if (card._id.toString() === cardId.toString()) {\r\n  //         return card;\r\n  //       }\r\n  //       return {};\r\n  //     })[0];\r\n  //     return filtered;\r\n  //   });\r\n\r\n  //   return result;\r\n  // };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { draggableId, source, destination } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const sourceColumnId = source.droppableId;\r\n    const destinationColumnId = destination.droppableId;\r\n    // const cardId = draggableId;\r\n\r\n    // check if drag and drop in the same column\r\n    if (sourceColumnId === destinationColumnId) {\r\n      const columnToChange = columns.filter(\r\n        (column) => column._id === destination.droppableId\r\n      )[0];\r\n      // console.log(\"get columnToChange from columns.filter :)\", columnToChange);\r\n      const cardIdsList = columnToChange.cardIdsList;\r\n\r\n      // change the list\r\n      const newCardIdsList = cardIdsList.slice();\r\n      // [].splice(start, deleteCount, item1, item2, ...)\r\n      newCardIdsList.splice(source.index, 1);\r\n      newCardIdsList.splice(destination.index, 0, draggableId);\r\n\r\n      columnToChange.cardIdsList = newCardIdsList;\r\n      // console.log(\"columnToChange\", columnToChange);\r\n\r\n      // update frontend first\r\n      setColumns(\r\n        columns.map((column) =>\r\n          column._id === columnToChange._id ? columnToChange : column\r\n        )\r\n      );\r\n\r\n      // console.log(\"updated (setColumns\");\r\n      // const columnUpdateResponse =\r\n      await axios.post(\r\n        // `http://localhost:4000/columns/update/${sourceColumnId}`,\r\n        `https://retro-clone-api.herokuapp.com/columns/update/${sourceColumnId}`,\r\n        {\r\n          cardIdsList: newCardIdsList,\r\n        }\r\n      );\r\n      // console.log(\"updated (post column)\", columnUpdateResponse);\r\n    } // check if drag and drop in different columns\r\n    else if (sourceColumnId !== destinationColumnId) {\r\n      // get 2 columns to change\r\n      const sourceColumn = columns.filter(\r\n        (column) => column._id.toString() === sourceColumnId.toString()\r\n      )[0];\r\n      const destinationColumn = columns.filter(\r\n        (column) => column._id.toString() === destinationColumnId.toString()\r\n      )[0];\r\n\r\n      // get 2 cardIdsList to change\r\n      const newSourceColumnCardIdsList = sourceColumn.cardIdsList.slice();\r\n      const newDestinationColumnCardIdsList = destinationColumn.cardIdsList.slice();\r\n\r\n      // change 2 cardIdsList\r\n      newSourceColumnCardIdsList.splice(source.index, 1);\r\n      // console.log(\"newSourceColumnCardIdsList: \", newSourceColumnCardIdsList);\r\n      sourceColumn.cardIdsList = newSourceColumnCardIdsList;\r\n\r\n      newDestinationColumnCardIdsList.splice(destination.index, 0, draggableId);\r\n      // console.log(\r\n      //   \"newDestinationColumnCardIdsList: \",\r\n      //   newDestinationColumnCardIdsList\r\n      // );\r\n      destinationColumn.cardIdsList = newDestinationColumnCardIdsList;\r\n\r\n      // update frontend: 2 columns\r\n      let newColumnsList = columns.map((column) =>\r\n        column._id.toString() === sourceColumnId.toString()\r\n          ? sourceColumn\r\n          : column\r\n      );\r\n      newColumnsList = columns.map((column) =>\r\n        column._id.toString() === destinationColumnId.toString()\r\n          ? destinationColumn\r\n          : column\r\n      );\r\n      // console.log(\"newColumnsList: \", newColumnsList);\r\n\r\n      // update frontendO: 2 cards\r\n\r\n      //---\r\n\r\n      setColumns(newColumnsList);\r\n\r\n      // update DB\r\n      // const sourceColResponse =\r\n      await axios.post(\r\n        // `http://localhost:4000/columns/update/${sourceColumnId}`,\r\n        `https://retro-clone-api.herokuapp.com/columns/update/${sourceColumnId}`,\r\n        sourceColumn\r\n      );\r\n      // console.log(\"sourceColResponse\", sourceColResponse);\r\n\r\n      // const destinationColResponse =\r\n      await axios.post(\r\n        // `http://localhost:4000/columns/update/${destinationColumnId}`,\r\n        `https://retro-clone-api.herokuapp.com/columns/update/${destinationColumnId}`,\r\n        destinationColumn\r\n      );\r\n      // console.log(\"destinationColResponse\", destinationColResponse);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={(result) => onDragEnd(result)}>\r\n      <div className={classes.boardTitle}>\r\n        <InputBase\r\n          className={classes.columnNameInput}\r\n          // value={board.name}\r\n          value={boardName}\r\n          onChange={(e) => handleBoardNameChange(e)}\r\n          inputProps={{\r\n            className: classes.input,\r\n          }}\r\n          fullWidth\r\n          onBlur={() => handleBlur()}\r\n        ></InputBase>\r\n        <Button\r\n          size=\"small\"\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          className={classes.button}\r\n          startIcon={<DeleteIcon />}\r\n          onClick={() => setOpenDeleteDialog(true)}\r\n        >\r\n          Delete board\r\n        </Button>\r\n        <Dialog\r\n          open={openDeleteDialog}\r\n          onClose={handleCloseDeleteDialog}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">\r\n            {\"Delete this board?\"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              This action will not be able to revert!\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              onClick={handleAcceptDeleteDialog}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              autoFocus\r\n            >\r\n              Yes, delete it!\r\n            </Button>\r\n            <Button\r\n              onClick={handleCloseDeleteDialog}\r\n              variant=\"contained\"\r\n              color=\"default\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      <div className={classes.columnsContainer}>\r\n        {columns.map((column, index) => (\r\n          <Column\r\n            index={index}\r\n            key={column._id}\r\n            column={column}\r\n            deleteColumnFromBoard={deleteColumnFromBoard}\r\n            changeColumnNameFromBoard={changeColumnNameFromBoard}\r\n            cardsList={column.cardIdsList.map(\r\n              (cardId) =>\r\n                allCards.filter(\r\n                  (card) => card._id.toString() === cardId.toString()\r\n                )[0]\r\n            )}\r\n            // cardsList={getCardsListOfColumn(column, cards)}\r\n            // allCards={cards}\r\n            addCardFromColumn={addCardFromColumn}\r\n            updateCardFromColumn={updateCardFromColumn}\r\n            deleteCardFromColumn={deleteCardFromColumn}\r\n            user={user}\r\n          />\r\n        ))}\r\n\r\n        {/* The new col to add stands on the right of columns */}\r\n        <div>\r\n          <Paper elevation={3} className={classes.column}>\r\n            <InputContainer\r\n              addColumnFromBoard={addColumnFromBoard}\r\n              type=\"column\"\r\n              boardId={id}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport const StoreContext = React.createContext(null);\r\n\r\nexport default function StoreContextProvider({ children }) {\r\n  const [contextBoards, setContextBoards] = useState([]);\r\n  const [contextColumns, setContextColumns] = useState([]);\r\n  const [contextCards, setContextCards] = useState([]);\r\n\r\n  // const addANewCard = (card) => {\r\n  //   console.log(\"card.name = \" + card.content);\r\n  //   setContextCards([...contextCards, card]);\r\n  // };\r\n\r\n  const store = {\r\n    // cards: [cards, setCards],\r\n    // columns: [columns, setColumns],\r\n    // boards: [boards, setBoards],\r\n    contextBoards,\r\n    setContextBoards,\r\n    contextColumns,\r\n    setContextColumns,\r\n    contextCards,\r\n    setContextCards,\r\n    // addANewCard,\r\n  };\r\n\r\n  return (\r\n    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\r\n  );\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nexport const AuthContext = createContext(null);\r\nexport default function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Link as LinkRRD, Redirect, useLocation } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport useAuth from \"../../context/auth\";\r\nimport axios from \"axios\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  errorMessage: {\r\n    padding: theme.spacing(1),\r\n    backgroundColor: \"yellow\",\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const location = useLocation();\r\n  console.log(\"location\", location);\r\n  const msgFromSignUp = location.state ? location.state.message : null;\r\n  const usernameFromSignUp = location.state ? location.state.username : null;\r\n\r\n  const classes = useStyles();\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [username, setUsername] = useState(\r\n    usernameFromSignUp ? usernameFromSignUp : \"\"\r\n  );\r\n  const [isInvalidUsername, setIsInvalidUsername] = useState(false);\r\n  const [isInvalidPassword, setIsInvalidPassword] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const { setAuthTokens } = useAuth();\r\n\r\n  // const referer = props.location.state.referer || \"/\";\r\n  //\r\n  // const location = useLocation();\r\n  // console.log(\"location\", location);\r\n  // const referer = location.state.referer || \"/\";\r\n  // console.log(\"login.js: referer:\", referer);\r\n  const referer = \"/boards\";\r\n\r\n  const postLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\r\n        // `http://localhost:4000/auth/login`\r\n        `https://retro-clone-api.herokuapp.com/auth/login`,\r\n        {\r\n          username: username,\r\n          password: password,\r\n        }\r\n      );\r\n      console.log(response);\r\n\r\n      if (response.status === 200) {\r\n        console.log(\"response.data.token: \", response.data.token);\r\n        setAuthTokens(response.data.token);\r\n        setLoggedIn(true);\r\n      }\r\n    } catch (err) {\r\n      console.log(\"Error in postLogin: \", err);\r\n      setIsError(true);\r\n    }\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to={referer} />;\r\n    // return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  const handleChangeUsername = (e) => {\r\n    setUsername(e.target.value);\r\n    const currentUsername = e.target.value;\r\n    const usernameRegex = /^(?=.{6,20}$)(?![_.0-9])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/;\r\n\r\n    if (!usernameRegex.test(currentUsername)) {\r\n      console.log(\"regex not pass\");\r\n      setIsInvalidUsername(true);\r\n    } else {\r\n      setIsInvalidUsername(false);\r\n    }\r\n  };\r\n\r\n  const handleChangePassword = (e) => {\r\n    const currentPassword = e.target.value;\r\n    setPassword(currentPassword);\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\r\n\r\n    if (!passwordRegex.test(currentPassword)) {\r\n      setIsInvalidPassword(true);\r\n    } else {\r\n      setIsInvalidPassword(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          {!isError && msgFromSignUp && (\r\n            <Alert severity=\"success\" color=\"success\">\r\n              {msgFromSignUp}\r\n            </Alert>\r\n          )}\r\n          {isError && (\r\n            <Alert severity=\"error\" color=\"error\">\r\n              Login failed. Username or password is incorrect.\r\n            </Alert>\r\n          )}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            value={username}\r\n            onChange={(e) => handleChangeUsername(e)}\r\n            error={isInvalidUsername}\r\n            helperText={isInvalidUsername ? \"Invalid username\" : null}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => handleChangePassword(e)}\r\n            error={isInvalidPassword}\r\n            helperText={isInvalidPassword ? \"Invalid password\" : null}\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e) => postLogin(e)}\r\n            disabled={username === \"\" || password === \"\"}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              {/* <Link href=\"/signup\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link> */}\r\n              <LinkRRD to=\"/signup\">{\"Don't have an account? Sign Up\"}</LinkRRD>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link as LinkRRD, Redirect } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Axios from \"axios\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [isInvalidUsername, setIsInvalidUsername] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isInvalidPassword, setIsInvalidPassword] = useState(false);\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [isInvalidPassword2, setIsInvalidPassword2] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isInvalidEmail, setIsInvalidEmail] = useState(false);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [isInvalidPhone, setIsInvalidPhone] = useState(false);\r\n\r\n  const [isError, setIsError] = useState(false); // error when post sign up\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  const [isSignedUp, setIsSignedUp] = useState(false);\r\n\r\n  if (isSignedUp) {\r\n    return (\r\n      <Redirect\r\n        // to=\"/login\"\r\n        to={{\r\n          pathname: \"/login\",\r\n          state: {\r\n            message: \"Register successfully. Now you can log in!\",\r\n            username: username,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  const postSignUp = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const UNAUTHORIZED = 401;\r\n    Axios.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        const { status } = error.response;\r\n        if (status === UNAUTHORIZED) {\r\n          console.log(error.response);\r\n          setIsError(true);\r\n          setErrorMsg(error.response.data.message);\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    try {\r\n      const signUpResponse = await Axios.post(\r\n        // `http://localhost:4000/auth/signup`,\r\n        `https://retro-clone-api.herokuapp.com/auth/signup`,\r\n        {\r\n          username,\r\n          password,\r\n          email,\r\n          phone,\r\n        }\r\n      );\r\n\r\n      console.log(\"signUp response: \", signUpResponse);\r\n\r\n      if (signUpResponse.status === 200) {\r\n        setIsSignedUp(true);\r\n      }\r\n    } catch (error) {\r\n      setIsError(true);\r\n\r\n      console.log(\"Error in postSignup: \", error);\r\n    }\r\n  };\r\n\r\n  const handleChangeUsername = (e) => {\r\n    setUsername(e.target.value);\r\n    const currentUsername = e.target.value;\r\n    const usernameRegex = /^(?=.{6,20}$)(?![_.0-9])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$/;\r\n\r\n    if (!usernameRegex.test(currentUsername)) {\r\n      console.log(\"regex not pass\");\r\n      setIsInvalidUsername(true);\r\n    } else {\r\n      setIsInvalidUsername(false);\r\n    }\r\n  };\r\n\r\n  const handleChangePassword = (e) => {\r\n    const currentPassword = e.target.value;\r\n    setPassword(currentPassword);\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\r\n\r\n    if (!passwordRegex.test(currentPassword)) {\r\n      setIsInvalidPassword(true);\r\n    } else {\r\n      setIsInvalidPassword(false);\r\n    }\r\n    if (currentPassword !== password2) {\r\n      setIsInvalidPassword2(true);\r\n    }\r\n  };\r\n\r\n  const handleChangePassword2 = (e) => {\r\n    const currentPassword2 = e.target.value;\r\n    setPassword2(currentPassword2);\r\n\r\n    if (currentPassword2 !== password) {\r\n      setIsInvalidPassword2(true);\r\n    } else {\r\n      setIsInvalidPassword2(false);\r\n    }\r\n  };\r\n\r\n  const handleChangeEmail = (e) => {\r\n    const currentEmail = e.target.value;\r\n    setEmail(currentEmail);\r\n    const emailRegex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\r\n    if (!emailRegex.test(currentEmail)) {\r\n      setIsInvalidEmail(true);\r\n    } else {\r\n      setIsInvalidEmail(false);\r\n    }\r\n  };\r\n\r\n  const handleChangePhone = (e) => {\r\n    setPhone(e.target.value);\r\n    const currentPhone = e.target.value;\r\n    const phoneRegex = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/;\r\n\r\n    if (!phoneRegex.test(currentPhone)) {\r\n      setIsInvalidPhone(true);\r\n    } else {\r\n      setIsInvalidPhone(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        {isError && (\r\n          <Alert severity=\"error\" color=\"error\">\r\n            {errorMsg}\r\n          </Alert>\r\n        )}\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                value={username}\r\n                onChange={(e) => handleChangeUsername(e)}\r\n                error={isInvalidUsername}\r\n                helperText={isInvalidUsername ? \"Invalid username\" : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={(e) => handleChangeEmail(e)}\r\n                error={isInvalidEmail}\r\n                helperText={isInvalidEmail ? \"Invalid email\" : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"phone\"\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                autoComplete=\"tel\"\r\n                value={phone}\r\n                onChange={(e) => handleChangePhone(e)}\r\n                error={isInvalidPhone}\r\n                helperText={isInvalidPhone ? \"Invalid phone number\" : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"new-password\"\r\n                value={password}\r\n                onChange={(e) => handleChangePassword(e)}\r\n                error={isInvalidPassword}\r\n                helperText={isInvalidPassword ? \"Invalid password\" : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password2\"\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                id=\"password2\"\r\n                autoComplete=\"new-password\"\r\n                value={password2}\r\n                onChange={(e) => handleChangePassword2(e)}\r\n                error={isInvalidPassword2}\r\n                helperText={isInvalidPassword2 ? \"Password not match\" : null}\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e) => postSignUp(e)}\r\n            disabled={\r\n              username === \"\" ||\r\n              password === \"\" ||\r\n              password2 === \"\" ||\r\n              email === \"\" ||\r\n              phone === \"\" ||\r\n              isInvalidUsername ||\r\n              isInvalidEmail ||\r\n              isInvalidPhone ||\r\n              isInvalidPassword ||\r\n              isInvalidPassword2\r\n            }\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              {/* <Link href=\"/login\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link> */}\r\n              <LinkRRD to=\"/login\">Already have an account? Sign in</LinkRRD>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Avatar, Popover, Typography } from \"@material-ui/core\";\r\nimport useAuth from \"../../context/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    margin: theme.spacing(1),\r\n    color: \"#fff\",\r\n  },\r\n  username: {\r\n    alignItems: \"center\",\r\n    color: \"#fff\",\r\n    margin: theme.spacing(1),\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0, 1, 0, 1),\r\n  },\r\n  menuIcon: {\r\n    margin: theme.spacing(0, 2, 0, 0),\r\n  },\r\n}));\r\n\r\nexport default function UserMedal({ user }) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const { setAuthTokens } = useAuth();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    console.log(\"menu.js: handleLogout!\");\r\n    setAuthTokens(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-controls=\"simple-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <Avatar />\r\n        <Typography className={classes.username}>{user.username}</Typography>\r\n      </Button>\r\n      <Popover\r\n        open={Boolean(anchorEl)}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"right\",\r\n        }}\r\n      >\r\n        <MenuItem component={Link} to={\"/profile\"}>\r\n          <AccountBoxIcon className={classes.menuIcon} />\r\n          Profile\r\n        </MenuItem>\r\n        <MenuItem onClick={handleLogout}>\r\n          {\" \"}\r\n          <ExitToAppIcon className={classes.menuIcon} /> Logout\r\n        </MenuItem>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardActionArea } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nexport default function BoardItem({ board, classes }) {\r\n  return (\r\n    <Grid item key={board._id} xs={12} sm={6} md={4}>\r\n      <Card className={classes.card}>\r\n        <CardActionArea\r\n          component={Link}\r\n          to={{\r\n            pathname: `/boards/${board._id}`,\r\n          }}\r\n        >\r\n          <CardMedia\r\n            className={classes.cardMedia}\r\n            image=\"https://source.unsplash.com/random\"\r\n            title=\"Image title\"\r\n          />\r\n          <CardContent className={classes.cardContent}>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {board.name}\r\n            </Typography>\r\n            <Typography align=\"right\" color=\"textSecondary\">\r\n              <ScheduleIcon style={{ fontSize: 14 }} />\r\n              {new Date(board.createdAt).toLocaleString()}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\">\r\n            URL\r\n          </Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            CLONE\r\n          </Button>\r\n          <IconButton aria-label=\"more\" size=\"small\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\r\n\r\n// Dialog\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport BoardItem from \"./board-item\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nexport default function BoardsList({ user }) {\r\n  const classes = useStyles();\r\n  const [openAddBoarDialog, setOpenAddBoarDialog] = useState(false);\r\n  const [newBoardName, setNewBoardName] = useState(\"New board\");\r\n  const [boards, setBoards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getAllBoards() {\r\n      const response = await axios.get(\r\n        `https://retro-clone-api.herokuapp.com/boards?userId=${user._id}`\r\n        // `http://localhost:4000/boards?userId=${user._id}`\r\n      );\r\n      const boards = response.data;\r\n      setBoards(boards);\r\n    }\r\n    getAllBoards();\r\n  }, [user]);\r\n\r\n  const handleClose = () => {\r\n    setOpenAddBoarDialog(false);\r\n  };\r\n\r\n  const handleCreate = async () => {\r\n    const board = {\r\n      name: newBoardName,\r\n      userId: user._id,\r\n    };\r\n\r\n    // update DB\r\n    const response = await axios.post(\r\n      // `http://localhost:4000/boards/add`,\r\n      `https://retro-clone-api.herokuapp.com/boards/add`,\r\n      board\r\n    );\r\n    const newBoard = response.data;\r\n    // console.log(newBoard);\r\n\r\n    // update frontend\r\n    setBoards([...boards, newBoard]);\r\n\r\n    setOpenAddBoarDialog(false);\r\n  };\r\n\r\n  const handleChangeTextField = (e) => {\r\n    setNewBoardName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.heroContent}>\r\n        <Container maxWidth=\"sm\">\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n          >\r\n            My Boards\r\n          </Typography>\r\n          <div className={classes.heroButtons}>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  startIcon={<AddCircleOutlinedIcon />}\r\n                  onClick={() => setOpenAddBoarDialog(true)}\r\n                >\r\n                  Add a new board\r\n                </Button>\r\n                {/* Dialog create new board */}\r\n                <Dialog\r\n                  open={openAddBoarDialog}\r\n                  onClose={handleClose}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                  <DialogTitle id=\"form-dialog-title\">\r\n                    Create a new board\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>\r\n                      <Typography>Create a new empty board.</Typography>\r\n                      <Typography>\r\n                        You can add columns by yourself later.\r\n                      </Typography>\r\n                    </DialogContentText>\r\n\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"name\"\r\n                      label=\"Board Name\"\r\n                      defaultValue=\"New board\"\r\n                      helperText=\"Enter name of the board\"\r\n                      onChange={(e) => handleChangeTextField(e)}\r\n                      // type=\"search\"\r\n                      required\r\n                      fullWidth\r\n                      on\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      onClick={handleCreate}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                    >\r\n                      CREATE\r\n                    </Button>\r\n                    <Button\r\n                      onClick={handleClose}\r\n                      variant=\"outlined\"\r\n                      color=\"default\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      <Container className={classes.cardGrid} maxWidth=\"md\">\r\n        {/* End hero unit */}\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"center\"\r\n          spacing={3}\r\n        >\r\n          {boards.map((board) => (\r\n            <BoardItem key={board._id} board={board} classes={classes} />\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Container,\r\n  CssBaseline,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core/\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Axios from \"axios\";\r\n\r\n// import avatar from \"assets/img/faces/marc.jpg\";\r\n\r\nconst styles = {\r\n  cardCategoryWhite: {\r\n    color: \"rgba(255,255,255,.62)\",\r\n    margin: \"0\",\r\n    fontSize: \"14px\",\r\n    marginTop: \"0\",\r\n    marginBottom: \"0\",\r\n  },\r\n  cardTitleWhite: {\r\n    color: \"#FFFFFF\",\r\n    marginTop: \"0px\",\r\n    minHeight: \"auto\",\r\n    fontWeight: \"300\",\r\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n    marginBottom: \"3px\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function UserProfile() {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({});\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [isInvalidNewPassword, setIsInvalidNewPassword] = useState(false);\r\n  const [isInvalidNewPassword2, setIsInvalidNewPassword2] = useState(false);\r\n  const [isInvalidEmail, setIsInvalidEmail] = useState(false);\r\n  const [isInvalidPhone, setIsInvalidPhone] = useState(false);\r\n  const [isError, setIsError] = useState(false); // error when post sign up\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [isEditedProfile, setIsEditedProfile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function getUserInfo() {\r\n      const getUserInfoResponse = await Axios.get(\r\n        // `http://localhost:4000/auth/user`\r\n        `https://retro-clone-api.herokuapp.com/auth/user`\r\n      );\r\n      const user = getUserInfoResponse.data;\r\n      setUser(user);\r\n      console.log(\"user\", user);\r\n      setUsername(user.username);\r\n      setEmail(user.email);\r\n      setPhone(user.phone);\r\n    }\r\n    getUserInfo();\r\n  }, [isEditedProfile]);\r\n\r\n  const handleChangeNewPassword = (e) => {\r\n    const currentPassword = e.target.value;\r\n    setPassword(currentPassword);\r\n    const passwordRegex = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/;\r\n\r\n    if (!passwordRegex.test(currentPassword)) {\r\n      setIsInvalidNewPassword(true);\r\n    } else {\r\n      setIsInvalidNewPassword(false);\r\n    }\r\n    if (currentPassword !== password2) {\r\n      setIsInvalidNewPassword2(true);\r\n    }\r\n  };\r\n\r\n  const handleChangeNewPassword2 = (e) => {\r\n    const currentPassword2 = e.target.value;\r\n    setPassword2(currentPassword2);\r\n\r\n    if (currentPassword2 !== password) {\r\n      setIsInvalidNewPassword2(true);\r\n    } else {\r\n      setIsInvalidNewPassword2(false);\r\n    }\r\n  };\r\n\r\n  const handleChangeEmail = (e) => {\r\n    const currentEmail = e.target.value;\r\n    setEmail(currentEmail);\r\n    const emailRegex = /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\r\n    if (!emailRegex.test(currentEmail)) {\r\n      setIsInvalidEmail(true);\r\n    } else {\r\n      setIsInvalidEmail(false);\r\n    }\r\n  };\r\n\r\n  const handleChangePhone = (e) => {\r\n    setPhone(e.target.value);\r\n    const currentPhone = e.target.value;\r\n    const phoneRegex = /\\(?([0-9]{3})\\)?([ .-]?)([0-9]{3})\\2([0-9]{4})/;\r\n\r\n    if (!phoneRegex.test(currentPhone)) {\r\n      setIsInvalidPhone(true);\r\n    } else {\r\n      setIsInvalidPhone(false);\r\n    }\r\n  };\r\n\r\n  const postUpdateProfile = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const updateUserResponse = await Axios.post(\r\n        // `http://localhost:4000/users/update/${user._id}`,\r\n        `https://retro-clone-api.herokuapp.com/users/update/${user._id}`,\r\n        {\r\n          password,\r\n          email,\r\n          phone,\r\n        }\r\n      );\r\n\r\n      console.log(\"updateUserResponse: \", updateUserResponse);\r\n\r\n      if (updateUserResponse.status === 200) {\r\n        setIsEditedProfile(true);\r\n      }\r\n    } catch (error) {\r\n      const { status } = error.response;\r\n      const BAD_REQUEST = 400;\r\n      if (status === BAD_REQUEST) {\r\n        console.log(error.response);\r\n        setIsError(true);\r\n        setErrorMsg(error.response.data.message);\r\n      }\r\n      console.log(\"Error in postUpdateProfile: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Edit profile\r\n        </Typography>\r\n        {!isError && isEditedProfile && (\r\n          <Alert severity=\"success\" color=\"success\">\r\n            {\"Update profile successfully\"}\r\n          </Alert>\r\n        )}\r\n        {isError && (\r\n          <Alert severity=\"error\" color=\"error\">\r\n            {errorMsg}\r\n          </Alert>\r\n        )}\r\n        <form className={classes.form} noValidate autoComplete=\"off\">\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                value={username || \"xxx\"}\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={(e) => handleChangeEmail(e)}\r\n                error={isInvalidEmail}\r\n                helperText={isInvalidEmail ? \"Invalid email\" : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"phone\"\r\n                label=\"Phone\"\r\n                name=\"phone\"\r\n                autoComplete=\"tel\"\r\n                value={phone}\r\n                onChange={(e) => handleChangePhone(e)}\r\n                error={isInvalidPhone}\r\n                helperText={isInvalidPhone ? \"Invalid phone number\" : null}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"new-password\"\r\n                value={password}\r\n                onChange={(e) => handleChangeNewPassword(e)}\r\n                error={isInvalidNewPassword}\r\n                helperText={\r\n                  isInvalidNewPassword ? \"Invalid new password\" : null\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password2\"\r\n                label=\"Confirm password\"\r\n                type=\"password\"\r\n                id=\"password2\"\r\n                autoComplete=\"new-password\"\r\n                value={password2}\r\n                onChange={(e) => handleChangeNewPassword2(e)}\r\n                error={isInvalidNewPassword2}\r\n                helperText={\r\n                  isInvalidNewPassword2 ? \"New password not match\" : null\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={(e) => postUpdateProfile(e)}\r\n            disabled={\r\n              username === \"\" ||\r\n              password === \"\" ||\r\n              password2 === \"\" ||\r\n              email === \"\" ||\r\n              phone === \"\" ||\r\n              isInvalidEmail ||\r\n              isInvalidPhone ||\r\n              isInvalidNewPassword ||\r\n              isInvalidNewPassword2\r\n            }\r\n          >\r\n            Update\r\n          </Button>\r\n          <Grid container justify=\"flex-end\"></Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport useAuth from \"../context/auth\";\r\n\r\nexport default function PrivateRoute(props) {\r\n  const { children, ...rest } = props;\r\n  const { authTokens } = useAuth();\r\n  return authTokens ? (\r\n    <Route {...rest}>{children}</Route>\r\n  ) : (\r\n    <Redirect to=\"/login\" />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport GradientIcon from \"@material-ui/icons/Gradient\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Home from \"./views/Home/Home\";\r\nimport BoardDetails from \"./components/boards/board-details\";\r\nimport StoreContextProvider from \"./utils/store\";\r\nimport { AuthContext } from \"./context/auth\";\r\nimport Login from \"./components/auth/login\";\r\nimport Signup from \"./components/auth/signup\";\r\nimport UserMedal from \"./components/user/UserMedal\";\r\n\r\nimport axios from \"axios\";\r\nimport BoardsList from \"./components/boards/board-list\";\r\nimport UserProfile from \"./views/UserProfile/UserProfile\";\r\nimport PrivateRoute from \"./auth/PrivateRoute\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    margin: theme.spacing(1),\r\n    color: \"#fff\",\r\n  },\r\n  navLinkHome: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n    \"&:focus, &:hover, &:visited, &:link, &:active\": {\r\n      textDecoration: \"none\",\r\n    },\r\n    color: \"#fff\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0, 1, 0, 1),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const existingTokens = JSON.parse(localStorage.getItem(\"tokens\"));\r\n  const [authTokens, setAuthTokens] = useState(existingTokens);\r\n  const [user, setUser] = useState({});\r\n\r\n  axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + authTokens;\r\n\r\n  useEffect(() => {\r\n    async function getUser() {\r\n      if (authTokens) {\r\n        // const url = `http://localhost:4000/auth/user`;\r\n        const url = `https://retro-clone-api.herokuapp.com/auth/user`;\r\n        const userResponse = await axios.get(url);\r\n        const user = userResponse.data;\r\n        console.log(\"user\", user);\r\n        setUser(user);\r\n      }\r\n    }\r\n    getUser();\r\n  }, [authTokens]);\r\n\r\n  const setTokens = (data) => {\r\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\r\n    setAuthTokens(data);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\r\n      <StoreContextProvider>\r\n        <Router>\r\n          <AppBar position=\"relative\">\r\n            <Toolbar className={classes.toolbar}>\r\n              <Link to=\"/boards\" className={classes.navLinkHome}>\r\n                <GradientIcon className={classes.icon} />\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                  FunRetroClone\r\n                </Typography>\r\n              </Link>\r\n              {authTokens ? (\r\n                <UserMedal user={user}></UserMedal>\r\n              ) : (\r\n                <div>\r\n                  <Button className={classes.button}>\r\n                    <Link\r\n                      to=\"/login\"\r\n                      className={classes.navLinkHome}\r\n                      color=\"primary\"\r\n                    >\r\n                      Log in\r\n                    </Link>\r\n                  </Button>\r\n                  <Button className={classes.button}>\r\n                    <Link to=\"/signup\" className={classes.navLinkHome}>\r\n                      Sign up\r\n                    </Link>\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <main>\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Home} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/signup\" component={Signup} />\r\n              <PrivateRoute path=\"/boards\" exact>\r\n                <BoardsList user={user}></BoardsList>\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/boards/:id\" exact>\r\n                <BoardDetails user={user} />\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/profile\">\r\n                <UserProfile user={user} />\r\n              </PrivateRoute>\r\n            </Switch>\r\n          </main>\r\n          {/* Footer */}\r\n          {/* <footer className={classes.footer}>\r\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n              Footer\r\n            </Typography>\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              component=\"p\"\r\n            >\r\n              Something here to give the footer a purpose!\r\n            </Typography>\r\n            <Copyright />\r\n          </footer> */}\r\n          {/* End footer */}\r\n        </Router>\r\n      </StoreContextProvider>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// function Copyright() {\r\n//   return (\r\n//     <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n//       {\"Copyright © \"}\r\n//       {/* <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n//         1712481@fit\r\n//       </Link>{\" \"} */}\r\n//       {new Date().getFullYear()}\r\n//       {\".\"}\r\n//     </Typography>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>\r\n  <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}