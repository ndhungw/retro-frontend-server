{"version":3,"sources":["components/lab-tabs.js","components/boards/board-item.component.js","components/boards/boards-list.component.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","LabTabs","classes","React","useState","value","setValue","className","TabContext","AppBar","position","TabList","onChange","event","newValue","aria-label","Tab","label","BoardItem","board","Grid","item","xs","sm","md","Card","card","CardMedia","cardMedia","image","title","CardContent","cardContent","Typography","gutterBottom","variant","component","name","align","color","style","fontSize","Date","createdAt","toLocaleString","CardActions","Button","size","_id","Copyright","Link","href","getFullYear","icon","marginRight","spacing","heroContent","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","height","display","flexDirection","footer","BoardsList","boards","setBoardsList","useEffect","a","axios","get","response","data","getAllBoards","Fragment","CssBaseline","Toolbar","noWrap","Container","maxWidth","container","justify","startIcon","direction","alignItems","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.525b93b6.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tab from '@material-ui/core/Tab';\nimport TabContext from '@material-ui/lab/TabContext';\nimport TabList from '@material-ui/lab/TabList';\n// import TabPanel from '@material-ui/lab/TabPanel';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function LabTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState('1');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <TabContext value={value}>\n        <AppBar position=\"static\">\n          <TabList onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"DASHBOARD\" value=\"dashboard\" />\n            <Tab label=\"TEAM\" value=\"team\" />\n            <Tab label=\"ANALYTICS\" value=\"analytics\" />\n          </TabList>\n        </AppBar>\n        {/* <TabPanel value=\"dashboard\">DASHBOARD</TabPanel>\n        <TabPanel value=\"team\">TEAM</TabPanel>\n        <TabPanel value=\"analytics\">ANALYTICS</TabPanel> */}\n      </TabContext>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\r\n\r\nexport default function BoardItem({ board, classes }) {\r\n  return (\r\n    <Grid item key={board._id} xs={12} sm={6} md={4}>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.cardMedia}\r\n          image=\"https://source.unsplash.com/random\"\r\n          title=\"Image title\"\r\n        />\r\n        <CardContent className={classes.cardContent}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {board.name}\r\n          </Typography>\r\n          <Typography\r\n          align=\"right\"\r\n          color=\"textSecondary\"\r\n          >\r\n            <ScheduleIcon style={{ fontSize: 14 }} />\r\n            {new Date(board.createdAt).toLocaleString()}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\">\r\n            URL\r\n          </Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            CLONE\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport GradientIcon from \"@material-ui/icons/Gradient\";\r\nimport AddCircleOutlinedIcon from \"@material-ui/icons/AddCircleOutlined\";\r\n\r\nimport LabTabs from \"../lab-tabs\"\r\nimport BoardItem from \"./board-item.component\";\r\nimport axios from \"axios\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright Â© \"}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        1712481@fit\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  cardMedia: {\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\n// const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nexport default function BoardsList() {\r\n  const classes = useStyles();\r\n  const [boards, setBoardsList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getAllBoards() {\r\n      // const response = await axios.get(\"http://localhost:4000/boards\");\r\n      const response = await axios.get(\"https://retro-clone-api.herokuapp.com/boards\");\r\n      const boards = response.data;\r\n      // console.log(boards);\r\n      setBoardsList(boards);\r\n    }\r\n    getAllBoards();\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          <GradientIcon className={classes.icon} />\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            FunRetroClone\r\n          </Typography>\r\n        </Toolbar>\r\n        <LabTabs />\r\n      {/* <NavTabs /> */}\r\n      \r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n            >\r\n              My Board\r\n            </Typography>\r\n            {/* <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"textSecondary\"\r\n              paragraph\r\n            >\r\n              Something short and leading about the collection belowâits\r\n              contents, the creator, etc. Make it short and sweet, but not too\r\n              short so folks don&apos;t simply skip over it entirely.\r\n            </Typography> */}\r\n            <div className={classes.heroButtons}>\r\n              <Grid container spacing={2} justify=\"center\">\r\n                <Grid item>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    startIcon={<AddCircleOutlinedIcon />}\r\n                  >\r\n                    Add a new board\r\n                  </Button>\r\n                </Grid>\r\n                {/* <Grid item>\r\n                  <Button variant=\"outlined\" color=\"primary\">\r\n                    See all boards\r\n                  </Button>\r\n                </Grid> */}\r\n              </Grid>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Container className={classes.cardGrid} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={3}\r\n          >\r\n            {boards.map((board) => (\r\n              <BoardItem board={board} classes={classes} />\r\n            ))}\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Something here to give the footer a purpose!\r\n        </Typography>\r\n        <Copyright />\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import './App.css';\nimport BoardsList from './components/boards/boards-list.component';\n\nfunction App() {\n  return (\n    <BoardsList></BoardsList>\n\n    // -------------------------------------------------------\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}